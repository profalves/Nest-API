var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.976,1,1.185]],["body/controllers/AppController.html",[0,1.454,1,1.766,2,1.366,3,0.751,4,0.6,5,0.6,6,2.073,7,0.751,8,1.766,9,3.14,10,1.668,11,0.075,12,1.124,13,2.688,14,1.366,15,2.157,16,0.971,17,0.751,18,1.323,19,2.073,20,0.751,21,0.346,22,2.073,23,2.688,24,1.366,25,2.688,26,0.044,27,0.057,28,0.044]],["title/modules/AppModule.html",[29,0.976,30,1.185]],["body/modules/AppModule.html",[1,1.744,2,1.515,3,0.598,4,0.478,5,0.478,11,0.075,16,1.129,17,0.598,18,1.388,19,1.651,20,0.598,21,0.276,26,0.035,27,0.049,28,0.035,29,1.436,30,2.211,31,0.896,32,0.896,33,1.329,34,1.329,35,0.896,36,2.13,37,1.329,38,1.651,39,1.651,40,1.651,41,1.691,42,1.129,43,1.851,44,1.329,45,1.329,46,2.141,47,1.744,48,2.982,49,2.141,50,2.141,51,2.141,52,2.141]],["title/injectables/AppService.html",[18,0.801,53,0.976]],["body/injectables/AppService.html",[3,0.791,4,0.632,5,0.632,7,0.791,8,1.825,9,3.201,11,0.074,12,1.184,14,1.438,15,2.229,16,0.791,17,0.791,18,1.234,20,0.791,21,0.364,24,1.438,26,0.046,27,0.058,28,0.046,53,1.502,54,1.756,55,2.182,56,2.829,57,2.182,58,2.829,59,2.182,60,2.829]],["title/classes/Task.html",[21,0.3,61,0.976]],["body/classes/Task.html",[3,0.704,4,0.563,5,0.563,7,0.704,10,2.316,11,0.074,12,1.561,15,2.068,16,0.704,20,0.704,21,0.325,26,0.041,27,0.054,28,0.041,61,1.394,62,2.52,63,1.944,64,2.57,65,2.879,66,2.879,67,2.316,68,1.896,69,3.331,70,4.327,71,2.52,72,2.52,73,2.068,74,2.52,75,1.944]],["title/injectables/TaskService.html",[42,0.652,53,0.976]],["body/injectables/TaskService.html",[3,0.269,4,0.215,5,0.215,7,0.45,8,0.818,11,0.077,12,1.22,14,1.371,16,0.45,17,0.269,20,0.269,21,0.124,24,1.232,26,0.016,27,0.026,28,0.016,42,0.45,53,0.673,54,0.597,61,1.614,64,1.241,65,3.144,66,3.144,67,2.604,68,1.371,73,1.81,76,0.742,77,1.6,78,1.241,79,1.241,80,1.87,81,1.241,82,1.241,83,1.241,84,0.962,85,1.87,86,1.87,87,1.87,88,1.241,89,0.962,90,0.962,91,0.962,92,1.241,93,0.962,94,1.609,95,0.962,96,0.962,97,0.962,98,2.25,99,4.076,100,4.076,101,1.87,102,2.424,103,2.424,104,2.424,105,2.424,106,2.424,107,2.424,108,2.424,109,2.424,110,0.962,111,0.962,112,2.074,113,0.962,114,1.609,115,2.074,116,1.241,117,0.962,118,0.962,119,0.962,120,0.742,121,0.962,122,2.074,123,0.962,124,0.962,125,0.962,126,0.962,127,0.962,128,0.962,129,0.962]],["title/controllers/TasksController.html",[0,0.976,47,1.185]],["body/controllers/TasksController.html",[0,0.623,2,0.756,3,0.416,4,0.333,5,0.333,7,0.416,8,1.161,10,2.089,11,0.075,12,1.408,14,1.71,16,0.777,17,0.416,20,0.416,21,0.192,22,1.148,24,1.585,26,0.024,27,0.037,28,0.024,42,0.777,47,1.161,61,1.725,67,2.295,68,1.585,73,2.429,77,1.148,78,1.763,79,2.145,80,2.406,81,1.763,82,1.763,83,1.148,85,2.406,86,2.406,87,2.406,88,1.148,92,1.148,120,1.148,130,1.148,131,1.489,132,4.26,133,2.781,134,1.489,135,3.816,136,2.285,137,1.489,138,1.489,139,2.285,140,1.489,141,1.489,142,2.285,143,1.489,144,1.489,145,2.285,146,1.489,147,1.489,148,1.148,149,1.489,150,1.489,151,1.489,152,1.489,153,1.489,154,1.489,155,1.489,156,1.489,157,1.489,158,1.489]],["title/modules/TasksModule.html",[29,0.976,41,0.976]],["body/modules/TasksModule.html",[3,0.747,4,0.597,5,0.597,11,0.073,16,0.968,17,0.747,20,0.747,21,0.344,26,0.044,27,0.056,28,0.044,29,1.607,31,1.118,32,1.118,33,1.659,34,1.659,35,1.118,36,2.384,37,1.659,41,1.804,42,1.205,43,2.149,44,1.659,45,1.659,148,2.062,159,2.673,160,2.673,161,2.673]],["title/coverage.html",[162,1.963]],["body/coverage.html",[0,1.459,1,1.373,5,0.604,6,2.085,11,0.073,18,0.928,21,0.348,26,0.044,27,0.057,28,0.044,35,1.131,42,0.755,47,1.373,53,1.459,55,2.085,59,2.085,61,1.131,63,2.085,68,1.373,76,2.085,116,3.335,130,2.085,162,1.678,163,2.085,164,2.703,165,2.703,166,3.488,167,2.085,168,2.703,169,2.703,170,2.703,171,2.703,172,2.703,173,2.703,174,2.703]],["title/dependencies.html",[32,1.171,175,1.957]],["body/dependencies.html",[11,0.075,17,0.829,26,0.048,27,0.06,28,0.048,32,1.242,75,2.289,176,4.033,177,2.968,178,2.968,179,3.701,180,2.968,181,2.968,182,2.968,183,2.968,184,2.968,185,2.968,186,2.968,187,2.968,188,2.968,189,2.968,190,2.968]],["title/miscellaneous/functions.html",[191,1.51,192,2.159]],["body/miscellaneous/functions.html",[7,0.952,11,0.066,26,0.055,27,0.066,28,0.055,35,1.791,167,2.628,191,2.628,192,2.628,193,3.407]],["title/index.html",[7,0.547,194,1.957,195,1.957]],["body/index.html",[4,0.474,11,0.074,26,0.035,27,0.048,28,0.035,57,2.852,162,1.317,163,2.635,196,3.698,197,2.122,198,2.122,199,2.122,200,4.136,201,2.122,202,2.122,203,2.122,204,4.03,205,2.122,206,2.122,207,2.964,208,2.122,209,2.122,210,2.122,211,2.122,212,2.964,213,2.964,214,2.122,215,2.122,216,2.122,217,2.122,218,2.122,219,2.122,220,2.122,221,2.122,222,2.122,223,2.122,224,2.122,225,2.286,226,2.964,227,2.964,228,2.122,229,2.122,230,2.122,231,2.122,232,2.122,233,2.122,234,2.122,235,2.122,236,2.122,237,2.122,238,2.122,239,2.122,240,2.122,241,2.122,242,2.122,243,2.122,244,2.122,245,2.122,246,2.122,247,2.122]],["title/modules.html",[31,1.323]],["body/modules.html",[11,0.065,26,0.054,27,0.065,28,0.054,30,1.696,31,1.396,41,1.396,225,3.066,248,3.975,249,3.975,250,3.975]],["title/overview.html",[251,2.44]],["body/overview.html",[2,1.358,11,0.07,18,1.319,21,0.344,26,0.044,27,0.056,28,0.044,29,1.118,30,2.26,31,1.118,32,1.118,33,1.659,34,1.659,35,1.118,36,1.659,37,1.659,38,2.062,39,2.062,40,2.062,41,1.76,42,1.135,43,2.149,44,1.659,45,1.659,54,1.659,98,2.062,101,2.962,251,2.062]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":116,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":169,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":172,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":170,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":98,"title":{},"body":{"injectables/TaskService.html":{},"overview.html":{}}}],["10",{"_index":109,"title":{},"body":{"injectables/TaskService.html":{}}}],["1].id",{"_index":119,"title":{},"body":{"injectables/TaskService.html":{}}}],["2",{"_index":101,"title":{},"body":{"injectables/TaskService.html":{},"overview.html":{}}}],["3",{"_index":102,"title":{},"body":{"injectables/TaskService.html":{}}}],["3.0.0",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":103,"title":{},"body":{"injectables/TaskService.html":{}}}],["4.1.4",{"_index":190,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":104,"title":{},"body":{"injectables/TaskService.html":{}}}],["6",{"_index":105,"title":{},"body":{"injectables/TaskService.html":{}}}],["6.5.5",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":106,"title":{},"body":{"injectables/TaskService.html":{}}}],["8",{"_index":107,"title":{},"body":{"injectables/TaskService.html":{}}}],["9",{"_index":108,"title":{},"body":{"injectables/TaskService.html":{}}}],["access",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["alves",{"_index":245,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":233,"title":{},"body":{"index.html":{}}}],["api",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["apiproperty",{"_index":70,"title":{},"body":{"classes/Task.html":{}}}],["app",{"_index":202,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":132,"title":{},"body":{"controllers/TasksController.html":{}}}],["author",{"_index":243,"title":{},"body":{"index.html":{}}}],["backers",{"_index":234,"title":{},"body":{"index.html":{}}}],["body",{"_index":145,"title":{},"body":{"controllers/TasksController.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"classes/Task.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":250,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":248,"title":{},"body":{"modules.html":{}}}],["class",{"_index":21,"title":{"classes/Task.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":62,"title":{},"body":{"classes/Task.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":159,"title":{},"body":{"modules/TasksModule.html":{}}}],["cluster_tasksmodule_providers",{"_index":160,"title":{},"body":{"modules/TasksModule.html":{}}}],["completed",{"_index":65,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{}}}],["compodoc",{"_index":221,"title":{},"body":{"index.html":{}}}],["const",{"_index":112,"title":{},"body":{"injectables/TaskService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TasksController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/TasksController.html":{}},"body":{"controllers/AppController.html":{},"controllers/TasksController.html":{},"coverage.html":{}}}],["controller('tasks",{"_index":149,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/TasksController.html":{},"overview.html":{}}}],["coverage",{"_index":162,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":78,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["create(@body",{"_index":153,"title":{},"body":{"controllers/TasksController.html":{}}}],["create(task",{"_index":83,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["date().tolocalestring",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Task.html":{},"controllers/TasksController.html":{}}}],["default",{"_index":96,"title":{},"body":{"injectables/TaskService.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["delete",{"_index":79,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["delete(':id",{"_index":136,"title":{},"body":{"controllers/TasksController.html":{}}}],["delete(@param('id",{"_index":157,"title":{},"body":{"controllers/TasksController.html":{}}}],["delete(id",{"_index":88,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["demo",{"_index":203,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":66,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{}}}],["developing",{"_index":206,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":163,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["e2e",{"_index":214,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["express",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":100,"title":{},"body":{"injectables/TaskService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["framework",{"_index":197,"title":{},"body":{"index.html":{}}}],["function",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":192,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":219,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":139,"title":{},"body":{"controllers/TasksController.html":{}}}],["getall",{"_index":80,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["getbyid",{"_index":81,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["getbyid(@param('id",{"_index":151,"title":{},"body":{"controllers/TasksController.html":{}}}],["getbyid(id",{"_index":92,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":194,"title":{"index.html":{}},"body":{}}],["grow",{"_index":230,"title":{},"body":{"index.html":{}}}],["here",{"_index":240,"title":{},"body":{"index.html":{}}}],["https://localhost:3000/api",{"_index":218,"title":{},"body":{"index.html":{}}}],["id",{"_index":67,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["identifier",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":199,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":201,"title":{},"body":{"index.html":{}}}],["join",{"_index":236,"title":{},"body":{"index.html":{}}}],["lastid",{"_index":115,"title":{},"body":{"injectables/TaskService.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["license",{"_index":246,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":227,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["miscellaneous",{"_index":191,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":226,"title":{},"body":{"index.html":{}}}],["mode",{"_index":207,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":239,"title":{},"body":{"index.html":{}}}],["name",{"_index":86,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["nest",{"_index":196,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":75,"title":{},"body":{"classes/Task.html":{},"dependencies.html":{}}}],["new",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["npm",{"_index":200,"title":{},"body":{"index.html":{}}}],["npx",{"_index":220,"title":{},"body":{"index.html":{}}}],["number",{"_index":73,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["open",{"_index":228,"title":{},"body":{"index.html":{}}}],["optional",{"_index":87,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["overview",{"_index":251,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":222,"title":{},"body":{"index.html":{}}}],["package",{"_index":175,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":144,"title":{},"body":{"controllers/TasksController.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["please",{"_index":237,"title":{},"body":{"index.html":{}}}],["post",{"_index":133,"title":{},"body":{"controllers/TasksController.html":{}}}],["powered",{"_index":247,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":131,"title":{},"body":{"controllers/TasksController.html":{}}}],["production",{"_index":209,"title":{},"body":{"index.html":{}}}],["project",{"_index":229,"title":{},"body":{"index.html":{}}}],["promise",{"_index":135,"title":{},"body":{"controllers/TasksController.html":{}}}],["properties",{"_index":64,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["put",{"_index":146,"title":{},"body":{"controllers/TasksController.html":{}}}],["put(':id",{"_index":142,"title":{},"body":{"controllers/TasksController.html":{}}}],["read",{"_index":238,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["rimraf",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["rodrigo",{"_index":244,"title":{},"body":{"index.html":{}}}],["routes",{"_index":217,"title":{},"body":{"index.html":{}}}],["run",{"_index":204,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["shared/task",{"_index":147,"title":{},"body":{"controllers/TasksController.html":{}}}],["shared/task.service",{"_index":148,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["shttp://127.0.0.1:8080",{"_index":224,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["sponsors",{"_index":232,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":167,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tasks/shared/task.service.ts",{"_index":76,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/tasks/shared/task.service.ts:19",{"_index":91,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/tasks/shared/task.service.ts:23",{"_index":93,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/tasks/shared/task.service.ts:28",{"_index":84,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/tasks/shared/task.service.ts:40",{"_index":95,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/tasks/shared/task.service.ts:50",{"_index":89,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/tasks/shared/task.service.ts:6",{"_index":110,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/tasks/shared/task.ts",{"_index":63,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/tasks/shared/task.ts:11",{"_index":71,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/shared/task.ts:5",{"_index":74,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/shared/task.ts:8",{"_index":72,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":130,"title":{},"body":{"controllers/TasksController.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts:18",{"_index":138,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:23",{"_index":140,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:28",{"_index":134,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:33",{"_index":143,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:39",{"_index":137,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.module.ts",{"_index":161,"title":{},"body":{"modules/TasksModule.html":{}}}],["start",{"_index":205,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":208,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":210,"title":{},"body":{"index.html":{}}}],["started",{"_index":195,"title":{"index.html":{}},"body":{}}],["statements",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":241,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Task.html":{}}}],["support",{"_index":225,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":249,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":188,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":174,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":173,"title":{},"body":{"coverage.html":{}}}],["tarefa",{"_index":99,"title":{},"body":{"injectables/TaskService.html":{}}}],["task",{"_index":61,"title":{"classes/Task.html":{}},"body":{"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"coverage.html":{}}}],["task.completed",{"_index":127,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.description",{"_index":125,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.id",{"_index":120,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["taskarray",{"_index":122,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskarray.completed",{"_index":126,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskarray.description",{"_index":124,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks",{"_index":77,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["tasks/shared/task.service",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["tasks/tasks.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["tasks/tasks.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":47,"title":{"controllers/TasksController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TasksController.html":{},"coverage.html":{}}}],["taskservice",{"_index":42,"title":{"injectables/TaskService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasksmodule",{"_index":41,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["test",{"_index":213,"title":{},"body":{"index.html":{}}}],["test:covsee",{"_index":216,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":215,"title":{},"body":{"index.html":{}}}],["tests",{"_index":212,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":231,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.getbyid(task.id",{"_index":123,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks",{"_index":111,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.find(value",{"_index":113,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.findindex(value",{"_index":128,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.length",{"_index":117,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.push(task",{"_index":121,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.splice(index",{"_index":129,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks[this.tasks.length",{"_index":118,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.taskservice.create(task",{"_index":154,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.delete(id",{"_index":158,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.getall",{"_index":150,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.getbyid(id",{"_index":152,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.update(task",{"_index":156,"title":{},"body":{"controllers/TasksController.html":{}}}],["touch",{"_index":242,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":223,"title":{},"body":{"index.html":{}}}],["type",{"_index":68,"title":{},"body":{"classes/Task.html":{},"injectables/TaskService.html":{},"controllers/TasksController.html":{},"coverage.html":{}}}],["typescript",{"_index":198,"title":{},"body":{"index.html":{}}}],["ui",{"_index":189,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":211,"title":{},"body":{"index.html":{}}}],["update",{"_index":82,"title":{},"body":{"injectables/TaskService.html":{},"controllers/TasksController.html":{}}}],["update(@param('id",{"_index":155,"title":{},"body":{"controllers/TasksController.html":{}}}],["update(id",{"_index":141,"title":{},"body":{"controllers/TasksController.html":{}}}],["update(task",{"_index":94,"title":{},"body":{"injectables/TaskService.html":{}}}],["value",{"_index":97,"title":{},"body":{"injectables/TaskService.html":{}}}],["value.id",{"_index":114,"title":{},"body":{"injectables/TaskService.html":{}}}],["void",{"_index":90,"title":{},"body":{"injectables/TaskService.html":{}}}],["you'd",{"_index":235,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nAppModule -->\n\nTaskService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            TasksController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TasksController } from './tasks/tasks.controller';\nimport { TasksModule } from './tasks/tasks.module';\nimport { TaskService } from './tasks/shared/task.service';\n\n@Module({\n  imports: [TasksModule],\n  controllers: [AppController, TasksController],\n  providers: [AppService, TaskService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return `API access in ${new Date().toLocaleString()}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/shared/task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                completed\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            completed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/shared/task.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/shared/task.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/shared/task.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class Task {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  completed: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/shared/task.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/shared/task.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/shared/task.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/shared/task.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/shared/task.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/shared/task.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { id: 1, description: 'Tarefa 1', completed: false },\n    { id: 2, description: 'Tarefa 2', completed: false },\n    { id: 3, description: 'Tarefa 3', completed: false },\n    { id: 4, description: 'Tarefa 4', completed: false },\n    { id: 5, description: 'Tarefa 5', completed: false },\n    { id: 6, description: 'Tarefa 6', completed: false },\n    { id: 7, description: 'Tarefa 7', completed: false },\n    { id: 8, description: 'Tarefa 8', completed: false },\n    { id: 9, description: 'Tarefa 9', completed: false },\n    { id: 10, description: 'Tarefa 10', completed: false },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/shared/task.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Task } from './task';\n\n@Injectable()\nexport class TaskService {\n  tasks: Task[] = [\n    { id: 1, description: 'Tarefa 1', completed: false },\n    { id: 2, description: 'Tarefa 2', completed: false },\n    { id: 3, description: 'Tarefa 3', completed: false },\n    { id: 4, description: 'Tarefa 4', completed: false },\n    { id: 5, description: 'Tarefa 5', completed: false },\n    { id: 6, description: 'Tarefa 6', completed: false },\n    { id: 7, description: 'Tarefa 7', completed: false },\n    { id: 8, description: 'Tarefa 8', completed: false },\n    { id: 9, description: 'Tarefa 9', completed: false },\n    { id: 10, description: 'Tarefa 10', completed: false },\n  ];\n\n  getAll() {\n    return this.tasks;\n  }\n\n  getById(id: number) {\n    const task = this.tasks.find(value => value.id == id);\n    return task;\n  }\n\n  create(task: Task) {\n    let lastID = 0;\n    if (this.tasks.length > 0) {\n      lastID = this.tasks[this.tasks.length - 1].id;\n    }\n\n    task.id = lastID + 1;\n    this.tasks.push(task);\n\n    return task;\n  }\n\n  update(task: Task) {\n    const taskArray = this.getById(task.id);\n    if (taskArray) {\n      taskArray.description = task.description;\n      taskArray.completed = task.completed;\n    }\n\n    return taskArray;\n  }\n\n  delete(id: number) {\n    const index = this.tasks.findIndex(value => value.id == id);\n    this.tasks.splice(index, 1);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(task: Task)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, task: Task)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Post,\n  Body,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport { Task } from './shared/task';\nimport { TaskService } from './shared/task.service';\n\n@Controller('tasks')\nexport class TasksController {\n  constructor(private taskService: TaskService) {}\n\n  @Get()\n  async getAll(): Promise {\n    return this.taskService.getAll();\n  }\n\n  @Get(':id')\n  async getById(@Param('id') id: number): Promise {\n    return this.taskService.getById(id);\n  }\n\n  @Post()\n  async create(@Body() task: Task): Promise {\n    return this.taskService.create(task);\n  }\n\n  @Put(':id')\n  async update(@Param('id') id: number, @Body() task: Task): Promise {\n    task.id = id;\n    return this.taskService.update(task);\n  }\n\n  @Delete(':id')\n  async delete(@Param('id') id: number) {\n    this.taskService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTaskService\n\nTaskService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTaskService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskService } from './shared/task.service';\n\n@Module({\n  providers: [TaskService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/shared/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tasks/shared/task.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            controller\n            TasksController\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^4.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNest API\nAPI with Nest framework TypeScript.\nInstallation\n$ npm installRunning the app\n# demo\n$ npm run start\n\n# developing mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSee API documentation\n\nAPI routes documentation\nhttps://localhost:3000/api\n\nGeneral documentation \n\n\nnpx compodoc -p tsconfig.json -shttp://127.0.0.1:8080\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Rodrigo Alves\n\nLicense\nNest is MIT licensed.\npowered by\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTasksModule -->\n\nTaskService->TasksModule\n\n\n\nAppModule -->\n\nTaskService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
